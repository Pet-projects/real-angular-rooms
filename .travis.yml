language: node_js
node_js:
   - "0.10"

#cache:
#  directories:
#    - frontEnd/node_modules
#    - frontEnd/bower_components
#    - test/node_modules

before_install:
  # LibCouchbase
  - sudo wget -O/etc/apt/sources.list.d/couchbase.list http://packages.couchbase.com/ubuntu/couchbase-ubuntu1204.list
  - "sudo wget http://packages.couchbase.com/ubuntu/couchbase.key && sudo cat couchbase.key | sudo apt-key add -"
  - sudo apt-get update
  - sudo apt-get install libcouchbase2 libcouchbase-dev

  # Couchbase Server
  - sudo wget http://packages.couchbase.com/releases/2.0.0/couchbase-server-enterprise_x86_64_2.0.0.deb
  - sudo dpkg -i couchbase-server-enterprise_x86_64_2.0.0.deb
  - sudo service couchbase-server start

  # Setup Bucket for test
  # This is done explicitly in the tests now
  # Left here for refrence
  # - /opt/couchbase/bin/couchbase-cli cluster-init -c 127.0.0.1:8091 --cluster-init-username=Administrator --cluster-init-password=password --cluster-init-ramsize=256
  # - /opt/couchbase/bin/couchbase-cli bucket-create -c 127.0.0.1:8091 --bucket=test --bucket-password=password --bucket-type=couchbase --bucket-port=11211 --bucket-ramsize=100 --bucket-replica=0 -u Administrator -p password

  # Initialize buckets
  - cp .travis.private-config.js ./db/setup/private-config.js

install:
  - ./run.sh db-setup
  - ./run.sh install

script:
  - ./run.sh db-seed
  - ./run.sh start
  - ./run.sh test
  - ./run.sh stop
  - ./run.sh show-logs

before_deploy: "echo 'ready?'"
deploy:
  provider: s3
  access_key_id: "wSekH7A+73aoF6+qUZvfdULPb0elsYbOmvCwdZa7S2UA13E8Z1piXzzJtUk+xvdifDPNTSyt7V11JKo2Avebb3Hejueh/7A8OHhu4+9yAOGfCTUJ3GuKXBLwKH4SlOubeetcG3ZcXtSViW78sd55zrSZ+6lUEu5r/YohS5itKYA="
  secret_access_key: "Ik5uTJGCqjEpOxPvqvv1SLNDu2dLgcKzW1i730AC5o/v0slu8pQO3cmS7fGayVuNIcZwaNs98IWV/kFYvPbFL4/Dg4WVYMS/1DibL0zss6e2+XI1zuXZQJo0k2ERAPqRLqsNK4aB5Vk6HDbSrYC9VFcjMe7R5B7Z9lrpXjETcTs="
  bucket: "jgh-angular-rooms"
  skip_cleanup: true
  region: eu-west-1
  detect_encoding: true
  local-dir: build
  upload-dir: artifacts
after_deploy:
  - "echo 'Done deploying'"